1. Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
Ans: a0-a7, fa0-fa7, 13 in a2

2. Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
Ans: inline f(26:	45b1 li	a1,12), call g in f(14:	250d  addiw	a0,a0,3)

3. At what address is the function printf located?
Ans: 0000000000000630

4. What value is in the register ra just after the jalr to printf in main?
Ans: 0x38 (next PC)

5. Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?

Here's a description of little- and big-endian and a more whimsical description.

Ans: little-endian: He110 World, big-endian: 

6. In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);

Ans: register for this value is undefined and it may contain any value